@model LoginTredMarktViewModel;

<header>
    <div>
        @await Html.PartialAsync("_HeaderPartial", Model.WelcomTredMarketPrecomponent)
    </div>
</header>
<body>
    <div class="card shadow border-0 my-4 py-4">
        <div class="card-header bg-navbar bf-bb bg-gradient ml-0 py-3">
            <div class="row">
                <div class="col-12 text-center">

                    <h2 class="fnt-blue py-2"> تعديل التحضيرات </h2>
                </div>
                <div class="col-12 text-center">
                    @if (Model.PreparationVM.PreparationsID != 0)
                    {
                        <h4 class="fnt-blue py-2"> " @Model.PreparationVM.prepareName " </h4>
                    }
                </div>
            </div>
        </div>


        <form method="post" class="row" enctype="multipart/form-data">

            <input asp-for="PreparationVM.PreparationsID" hidden />
            <input asp-for="PreparationVM.BrandFK" hidden />
            <input asp-for="PreparationVM.prepareImage" hidden />
            <input asp-for="TredMarktVM.Date1" hidden />
            <input asp-for="TredMarktVM.BrandCoverImage" hidden />
            <input asp-for="TredMarktVM.BrandLogoImage" hidden />
            <input asp-for="TredMarktVM.BrandFooterImage" hidden />
            @* <input type="hidden" id="order-input" name="PreparationVM.Order" value="0.1" />*@


            <div class="card-body p-4 py-4">
                <div class="border p-3">

                    @*added this class main-container-table*@
                    <div class="main-container-table">

                        <div id="exTab11111" class="container">
                            <!-- Tab table -->
                            <table class="table table-bordered">
                                <tbody>
                                    <tr>
                                        <td class="active">
                                            <a href="@Url.Action("RedirectToInormation", "Preparation", new { PreparationID = Model.PreparationVM.PreparationsID, brandFK = Model.PreparationVM.BrandFK })">المعلومات</a>
                                        </td>
                                        <td>
                                            <a href="@Url.Action("RedirectToComponent", "Preparation", new { PreparationID = Model.PreparationVM.PreparationsID, brandFK = Model.PreparationVM.BrandFK })">المكونات</a>
                                        </td>
                                        <td>
                                    <a href="@Url.Action("RedirectToTools", "Preparation", new { PreparationID = Model.PreparationVM.PreparationsID, brandFK = Model.PreparationVM.BrandFK })">الأدوات</a>
                                        </td>
                                        <td>
                                            <a href="@Url.Action("RedirectToSteps", "Preparation", new { PreparationID = Model.PreparationVM.PreparationsID, brandFK = Model.PreparationVM.BrandFK })">الخطوات</a>
                                        </td>
                                        </tr>
                                </tbody>
                            </table>

                            <div>
                                <h4 style="text-align:right">الأدوات</h4>
                            </div>
                            @* id is important!!*@
                            <table id="tblToolVarity" class="table  table-style1 table-bordered table-striped" data-preparation-id="@Model.PreparationVM.PreparationsID">
                                <thead>
                                    <tr>
                                        <th class="col-1">رقم الأداة</th>
                                        <th class="col-9"> الأدوات المستخدمة</th>

                                        <th style="text-align:center;">

                                            @*type="button" is important*@
                                            <button type="button" class="btn btn-style2 fnt-white " onclick="AddRowTool('@Model.PreparationVM.PreparationsID')">إضافة</button>

                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model.PreparationVM.PreparationsID != 0)
                                    {
                                        @for (int i = 0; i < Model.ToolsVarityVMList.Count; i++)
                                        {
                                            var item = Model.ToolsVarityVMList[i];
                                            <tr>
                                                <td style="text-align:center;">@(i + 1)</td>
                                                <td>
                                                    @*Id is important but should be hidden*@
                                                    <input asp-for="@item.PrepToolsID" name="ToolsVarityVMList[@i].PrepToolsID" hidden />
                                                    <input asp-for="@item.PreparationsFK" name="ToolsVarityVMList[@i].PreparationsFK" hidden />

                                                    <input asp-for="@item.PrepTools" class="form-control" name="ToolsVarityVMList[@i].PrepTools" />
                                                    <span asp-validation-for="@item.PrepTools" class="text-danger"></span>
                                                </td>

                                                <td style="text-align:center;">
                                                    <button type="button" class="btn btn-danger" onclick="DeleteToolVariety(@item.PrepToolsID)">حذف</button>
                                                </td>
                                            </tr>
                                        }
                                    }

                                </tbody>

                            </table>
                            <div class="form-group col-12 py-2">
                                <div style="text-align: left;">

                                    <div class="form-group col-12 py-3 fxcc">
                                        <input type="submit" id="saveChange"
                                               value=" حفظ التغييرات" href="@Url.Action("RedirectToTools","Preparation", new { PreparationID = Model.PreparationVM.PreparationsID,brandFK = Model.WelcomTredMarketPrecomponent.TredMarktVM.BrandID })" style="text-align:center" class="btn btn-style1 fnt-white me-3" abled />
                                    </div>
                                </div>
                            </div>
                        </div>
                            </div>
                        </div>

                </div>
        </form>
    </div>

</body>


<script>
    function displaySelectedImage(input, imgId) {

        // Get the reference to the HTML img element based on the provided imgId
        var imgElement = document.getElementById(imgId);

        // Check if a file has been selected in the input element
        if (input.files && input.files[0]) {

            // Create a new FileReader object to read the selected file
            var reader = new FileReader();

            // Define an event handler for when the FileReader has finished reading the file
            reader.onload = function (e) {

                // Set the 'src' attribute of the img element to the read image data
                imgElement.src = e.target.result;
            };
            // Read the selected file as a data URL (base64 encoded)
            reader.readAsDataURL(input.files[0]);
        }
    }
</script>




@*<script>
    var currentNumber = 1;

    function validateرقم_الخطوة1(input, index) {
        console.log("validateرقم_الخطوة1 function called"); // Debugging
        var رقم_الخطوة1 = parseInt(input.value);

        if (index === 0) {
            // If this is the first input, ensure it's 1
            if (رقم_الخطوة1 !== 1) {
                input.setCustomValidity("الرقم الأول يجب أن يكون 1");
            } else {
                input.setCustomValidity('');
                currentNumber = 3; // Reset currentNumber to 1 for the next input
            }
        } else {
            // For subsequent inputs, enforce sequential incrementation
            if (isNaN(رقم_الخطوة1) || رقم_الخطوة1 !== currentNumber) {
                input.setCustomValidity("الرقم يجب أن يكون " + currentNumber);
            } else {
                input.setCustomValidity('');
                currentNumber += 2; // Increment the current number for the next validation
            }
        }
    }
</script>

<script>
var currentNumber = 2;

function validateرقم_الخطوة2(input, index) {
        console.log("validateرقم_الخطوة2 function called"); // Corrected function name
    var رقم_الخطوة2 = parseInt(input.value);

    if (index === 0) {
        // If this is the first input, ensure it's 2 (not 1)
        if (رقم_الخطوة2 !== 2) { // Corrected expected value
            input.setCustomValidity("الرقم الأول يجب أن يكون 2");
        } else {
            input.setCustomValidity('');
            currentNumber = 4; // Reset currentNumber to 2 for the next input
        }
    } else {
        // For subsequent inputs, enforce sequential incrementation
        if (isNaN(رقم_الخطوة2) || رقم_الخطوة2 !== currentNumber) {
            input.setCustomValidity("الرقم يجب أن يكون " + currentNumber);
        } else {
            input.setCustomValidity('');
            currentNumber += 2; // Increment the current number by 2 for the next validation
        }
    }
}

</script> *@

@section Scripts {

  @*   <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
    <script src="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"></script> *@

    <script src="~/Js/Preparation/Toolsvariety.js"></script>
   
}



